<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          http://www.springframework.org/schema/security/oauth2 
          http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">

	<http pattern="/**/*.css" security="none" auto-config="false"></http>
	<http pattern="/**/*.js" security="none" auto-config="false"></http>
	<http pattern="/js/**" security="none" auto-config="false"></http>
	<http pattern="/images/**" security="none" auto-config="false"></http>
	<http pattern="/security/web/login**" security="none" auto-config="false"></http>


	<!-- <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy"> <filter-chain-map request-matcher="ant"> 
		<filter-chain pattern="/images/**" filters="none" /> <filter-chain pattern="/**/*.css" filters="none" /> <filter-chain pattern="/**/*.js" filters="none" 
		/> <filter-chain filters="none" pattern="/**/*.gif" /> <filter-chain filters="none" pattern="/**/*.jpg" /> <filter-chain filters="none" pattern="/**/*.png" 
		/> <filter-chain filters="none" pattern="/**/*.jpeg" /> <filter-chain filters="none" pattern="/**/*.bmp" /> <filter-chain pattern="/**" filters="securityContextPersistenceFilter,concurrentSessionFilter, 
		usernamePasswordAuthenticationFilter, ajaxUsernamePasswordAuthenticationFilter,securityContextHolderAwareRequestFilter, rememberMeFilter,logoutFilter,anonymousAuthFilter,exceptionTranslationFilter, 
		filterSecurityInterceptor" /> </filter-chain-map> </beans:bean> -->


	<beans:bean id="concurrentSessionFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg>
			<beans:ref bean="sessionRegistry" />
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:value>/security/web/login?error=timeout</beans:value>
		</beans:constructor-arg>
		<!-- <beans:property name="sessionRegistry" ref="sessionRegistry"></beans:property> <beans:property name="expiredUrl" value="/login?error=timeout"></beans:property> -->
	</beans:bean>
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"></beans:bean>

	<beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<beans:constructor-arg>
			<beans:ref bean="httpSessionSecurityContextRespository" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"></beans:bean>

	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg>
			<beans:ref bean="logoutSuccessHandler" />
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="rememberMeServices" />
				<beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"></beans:bean>
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/security/web/j_spring_security_logout"></beans:property>
	</beans:bean>
	<beans:bean id="logoutSuccessHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/default.jsp"></beans:property>
	</beans:bean>

	<beans:bean id="httpSessionSecurityContextRespository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
		<beans:property name="allowSessionCreation" value="true" />
	</beans:bean>
	<beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/default.jsp"></beans:property>
	</beans:bean>
	<!-- Ajax -->
	<beans:bean id="ajaxSuccessHandler" class="com.faceye.component.security.web.service.impl.AjaxSavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/default.jsp"></beans:property>
	</beans:bean>

	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/security/web/login?error=loginFailure"></beans:property>
	</beans:bean>

	<beans:bean id="ajaxFailureHandler" class="com.faceye.component.security.web.service.impl.AjaxSimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/security/web/login?error=loginFailure"></beans:property>
	</beans:bean>

	<beans:bean id="usernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	<!-- 
		<beans:property name="usernameParameter" value="j_username"></beans:property>
		<beans:property name="passwordParameter" value="j_password"></beans:property>
		-->
		<beans:property name="filterProcessesUrl" value="/security/web/j_spring_security_check"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="successHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="failureHandler"></beans:property>
	</beans:bean>
	<beans:bean id="ajaxUsernamePasswordAuthenticationFilter" class="com.faceye.component.security.web.service.impl.AjaxUsernamePasswordAuthenticationFilter">
		<!--  <beans:property name="usernameParameter" value="j_username"></beans:property>
		<beans:property name="passwordParameter" value="j_password"></beans:property>
		-->
		<beans:property name="filterProcessesUrl" value="/security/web/ajax_j_spring_security_check"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="ajaxSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="ajaxFailureHandler"></beans:property>
	</beans:bean>
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="webResourceService"></beans:property>
		<!-- <beans:property name="securityMetadataSource"> <security:filter-security-metadata-source> <security:intercept-url pattern="/secure/super/**" 
			access="ROLE_WE_DONT_HAVE" /> <security:intercept-url pattern="/secure/**" access="ROLE_SUPERVISOR,ROLE_TELLER" /> </security:filter-security-metadata-source> 
			</beans:property> -->
	</beans:bean>
  
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="daoAuthenticationProvider" />
				<beans:ref bean="rememberMeAuthenticationProvider" />
				<beans:ref bean="anonymousAuthenticationProvider" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	 
	 
<!-- 
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider"></authentication-provider>
		<authentication-provider ref="rememberMeAuthenticationProvider"></authentication-provider>
		<authentication-provider ref="anonymousAuthenticationProvider"></authentication-provider>
	</authentication-manager>
	 -->
	


<!-- 
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
		<beans:property name="encodeHashAsBase64" value="false" />
	</beans:bean>
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="getUsername" />
	</beans:bean>
	 -->
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="webUserService"></beans:property>
		<!-- 
		<beans:property name="passwordEncoder" ref="passwordEncoder"></beans:property>
		<beans:property name="saltSource" ref="saltSource"></beans:property>
		 -->
	</beans:bean>

	<beans:bean id="accessDecisionManager" class="com.faceye.component.security.web.service.impl.SecurityAccessDecisionManager">
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="roleVoter" />
				<beans:ref bean="authenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
		<!-- 如果全部弃权则通过 -->
		<beans:property name="allowIfAllAbstainDecisions" value="false"></beans:property>
	</beans:bean>
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value="ROLE_" />
	</beans:bean>
	<beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />

	<beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:constructor-arg>
			<beans:ref bean="authenticationEntryPoint" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="authenticationEntryPoint" class="com.faceye.component.security.web.service.impl.AjaxAndCommonLoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/security/web/login" />
	</beans:bean>
	<beans:bean id="accessDeniedHandler" class="com.faceye.component.security.web.service.impl.AccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/security/web/login?error=forbidden" />
		<beans:property name="characterEncoding" value="UTF-8"></beans:property>
	</beans:bean>
	<!-- <beans:bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"> <property 
		name='securityContextRepository'> <beans:bean class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"> <beans:property 
		name="allowSessionCreation" value="false" /> </beans:bean> </beans:property> </beans:bean> -->
	<!-- <beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> <property 
		name="authenticationManager" ref="authenticationManager" /> <beans:property name="filterProcessesUrl" value="/j_spring_security_check" /> </beans:bean> -->
	<!-- <beans:bean id="channelProcessingFilter" class="org.springframework.security.web.access.channel.ChannelProcessingFilter"> <beans:property name="channelDecisionManager" 
		ref="channelDecisionManager"></beans:property> <beans:property name="securityMetadataSource"> <security:filter-security-metadata-source> <security:intercept-url 
		pattern="\A/j_spring_security_check.*\Z" access="REQUIRES_SECURE_CHANNEL" /> REQUIRES_SECURE_CHANNEL <security:intercept-url pattern="/secure/**" 
		access="ROLE_SUPERVISOR,ROLE_TELLER" /> </security:filter-security-metadata-source> </beans:property> </beans:bean> -->
	<beans:bean id="channelDecisionManager" class="org.springframework.security.web.access.channel.ChannelDecisionManagerImpl">
		<beans:property name="channelProcessors">
			<beans:list>
				<beans:ref bean="secureChannelProcessor" />
				<beans:ref bean="insecureChannelProcessor" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="secureChannelProcessor" class="org.springframework.security.web.access.channel.SecureChannelProcessor" />
	<beans:bean id="insecureChannelProcessor" class="org.springframework.security.web.access.channel.InsecureChannelProcessor" />
	<beans:bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<beans:constructor-arg>
			<beans:ref bean="authenticationManager" />
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:ref bean="rememberMeServices" />
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<beans:constructor-arg>
			<beans:value>springRocks</beans:value>
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:ref bean="webUserService" />
		</beans:constructor-arg>

	</beans:bean>
	<beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:constructor-arg>
			<beans:value>springRocks</beans:value>
		</beans:constructor-arg>

	</beans:bean>
	<beans:bean id="anonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<beans:constructor-arg>
			<beans:value>foobar</beans:value>
		</beans:constructor-arg>
	</beans:bean>
	<beans:bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<beans:constructor-arg>
			<beans:value>foobar</beans:value>
		</beans:constructor-arg>
	</beans:bean>
<!-- 
	<beans:import resource="classpath*:/conf/applicationContext-oauth2-security.xml" />
 -->
	<http authentication-manager-ref="authenticationManager" access-decision-manager-ref="accessDecisionManager" entry-point-ref="authenticationEntryPoint"
		auto-config="false" request-matcher="ant" pattern="/**">
		<csrf disabled="true" />
		<!-- <form-login login-page="/security/web/login" /> <custom-filter ref="usernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER" /> 
			<custom-filter ref="ajaxUsernamePasswordAuthenticationFilter" after="FORM_LOGIN_FILTER" /> <custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER" 
			/> <custom-filter ref="logoutFilter" position="LOGOUT_FILTER" /> <custom-filter ref="filterSecurityInterceptor" position="FILTER_SECURITY_INTERCEPTOR" 
			/> -->
		<!-- <custom-filter ref="concurrentSessionFilter" position="CONCURRENT_SESSION_FILTER" /> <custom-filter ref="usernamePasswordAuthenticationFilter" 
			position="FORM_LOGIN_FILTER" /> <custom-filter ref="ajaxUsernamePasswordAuthenticationFilter" after="FORM_LOGIN_FILTER" /> <custom-filter ref="rememberMeFilter" 
			position="REMEMBER_ME_FILTER" /> <custom-filter ref="logoutFilter" position="LOGOUT_FILTER" /> <custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" 
			/> -->
		<custom-filter ref="concurrentSessionFilter" position="CONCURRENT_SESSION_FILTER" />
		<custom-filter ref="securityContextPersistenceFilter" before="SECURITY_CONTEXT_FILTER" />
		<custom-filter ref="usernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="ajaxUsernamePasswordAuthenticationFilter" after="FORM_LOGIN_FILTER" />
		<custom-filter ref="securityContextHolderAwareRequestFilter" before="SERVLET_API_SUPPORT_FILTER" />
		<custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER" />
		<custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<custom-filter ref="anonymousAuthFilter" before="ANONYMOUS_FILTER" />
		<custom-filter ref="exceptionTranslationFilter" before="EXCEPTION_TRANSLATION_FILTER" />
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
</beans:beans>
