<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          http://www.springframework.org/schema/security/oauth2 
          http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">
<!--  -->
	<http pattern="/oauth/token**" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"
		entry-point-ref="oauth2AuthenticationEntryPoint" auto-config="false" use-expressions="false">
		<csrf disabled="true" />
		<intercept-url pattern="/oauth/token**" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="oauth2AuthenticationEntryPoint" />
		<custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>
	<!--mobile http configuration -->
	<http pattern="/m/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint" access-decision-manager-ref="oauth2AccessDecisionManager"
		request-matcher="ant" auto-config="false" use-expressions="false">
		<anonymous enabled="false" />
		<csrf disabled="true" />
		<intercept-url pattern="/m/**" access="ROLE_1" />
		<custom-filter ref="mobileResourceServer" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>
		<!--web http configuration -->
	<http pattern="/web/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint" access-decision-manager-ref="oauth2AccessDecisionManager"
		request-matcher="ant" auto-config="false" use-expressions="false">
		<anonymous enabled="false" />
		<csrf disabled="true" />
		<intercept-url pattern="/web/**" access="ROLE_2" />
		<custom-filter ref="webResourceServer" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>
	<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>
	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="supportRefreshToken" value="true" />
	</beans:bean>

	<beans:bean id="clientDetailsService" class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>


	<beans:bean id="oauth2ClientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetailsService" />
	</beans:bean>

	<!-- ? -->
	<beans:bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	</beans:bean>

	<authentication-manager id="oauth2AuthenticationManager">
		<authentication-provider user-service-ref="oauth2ClientDetailsUserService" />
	</authentication-manager>

	<!-- <authentication-manager alias="authenticationManager"> <authentication-provider user-service-ref="webUserService"> <password-encoder hash="md5" 
		/> </authentication-provider> </authentication-manager> -->

	<beans:bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory" id="oauth2RequestFactory">
		<beans:constructor-arg name="clientDetailsService" ref="clientDetailsService" />
	</beans:bean>


	<beans:bean id="oauth2AccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<!-- <beans:bean id="oauthUserApprovalHandler" class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler"> </beans:bean> -->

	<beans:bean id="oauthUserApprovalHandler" class="org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="clientDetailsService" ref="clientDetailsService" />
		<beans:property name="requestFactory" ref="oauth2RequestFactory" />
	</beans:bean>

	<beans:bean id="authorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>

	<oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
		user-approval-handler-ref="oauthUserApprovalHandler" user-approval-page="oauth_approval" error-page="oauth_error" >
		<oauth2:authorization-code authorization-code-services-ref="authorizationCodeServices" />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password authentication-manager-ref="authenticationManager"/>
	</oauth2:authorization-server>

	<beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter" />
				<beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<!-- <beans:bean class="org.springframework.security.access.vote.RoleVoter" /> -->
				<beans:ref bean="roleVoter" />
				<!-- <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" /> -->
				<beans:ref bean="authenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>


	<!--unity resource server filter -->
	 <oauth2:resource-server id="webResourceServer" resource-id="web-resource" token-services-ref="tokenServices" 
		/>

	<!--mobile resource server filter -->
	<oauth2:resource-server id="mobileResourceServer" resource-id="mobile-resource" token-services-ref="tokenServices" />

	<beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="oauth2AuthenticationManager" />
	</beans:bean>



	<!-- <bean id="oauth2FilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor"> <property name="authenticationManager" 
		ref="oauth2AuthenticationManager" /> <property name="accessDecisionManager" ref="oauth2AccessDecisionManager" /> <property name="securityMetadataSource" 
		ref="webResourceService"></property> </bean> -->

	<!-- <http access-denied-page="/security/web/login?authorization_error=2" disable-url-rewriting="true" authentication-manager-ref="authenticationManager"> 
		<intercept-url pattern="/security/web/oauth/**" access="ROLE_USER,ROLE_UNITY,ROLE_MOBILE" /> <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" 
		/> <form-login authentication-failure-url="/security/web/login?authentication_error=1" default-target-url="/default.jsp" login-page="/security/web/login" 
		login-processing-url="/security/web/j_spring_security_check" /> <logout logout-success-url="/default.jsp" logout-url="/logout.do" /> <anonymous /> 
		</http> -->
</beans:beans>
